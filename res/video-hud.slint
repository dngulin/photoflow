import { Label } from "label.slint";

export global TimeFormatter {
    pure callback hh-mm-ss(seconds: float) -> string;
}

export enum HudState {
    Paused,
    Playing,
    SeekingForward,
    SeekingBackward
}

export struct HudModel {
    duration-seconds: float,
    state: HudState,
    progress: float,
}

export component VideoHud {
    in property <HudModel> model;
    in property <length> bar-height: 4px;

    bar := Rectangle {
        x: 0;
        y: parent.height - bar-height;
        height: bar-height;
        width: model.progress * parent.width;
        background: white;
    }

    if is-seeking(): Label {
        x: parent.width - self.width - 4px;
        y: 4px;
        icon: label-icon();
        text: TimeFormatter.hh-mm-ss(model.duration-seconds * model.progress);
        font-size: 12px;
    }

    pure function is-seeking() -> bool {
        model.state == HudState.SeekingForward || model.state == HudState.SeekingBackward
    }

    pure function label-icon() -> image {
        if (model.state == HudState.SeekingForward) {
            return @image-url("img/seek-forward.svg");
        }
        return @image-url("img/seek-backward.svg");
    }
}

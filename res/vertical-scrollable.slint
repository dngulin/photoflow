import { SpringConfig, SpringState, Spring } from "spring-animation.slint";

export component VerticalScrollable inherits Rectangle {
    width: 100%;
    height: 100%;
    clip: true;

    in property <length> contents-w;
    in property <length> contents-h;

    in-out property <length> viewport-x;
    in-out property <length> viewport-y;

    in property <float> spring-scroll-stiffness: 700;
    in property <float> spring-scroll-damping: 40;
    in property <float> spring-scroll-mass: 1;

    public function set-spring-scroll-target(target: length) {
        scroll-spring.update-target(target);
    }

    Rectangle {
        x: -root.viewport-x;
        y: -root.viewport-y;
        width: root.contents-w;
        height: root.contents-h;
        @children
    }

    scroll-spring := Timer {
        interval: 1s / 60;
        running: Spring.is-active(state);

        property <SpringState> state;
        property <SpringConfig> config: {
            stiffness: root.spring-scroll-stiffness,
            damping: root.spring-scroll-damping,
            mass:  root.spring-scroll-mass,
        };

        function update-target(target: length) {
            state = Spring.start(root.viewport-y / 1px, target / 1px, state.velocity);
        }

        triggered => {
            self.state = Spring.update(config, state, self.interval / 1s);
            root.viewport-y = state.current-value * 1px;
        }
    }
}
